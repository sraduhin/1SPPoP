version: '3'
services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: etl
    environment:
      - ELASTIC_HOST=${ELASTIC_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - DB_HOST=${DB_HOST}
    command: /entrypoint.sh
    volumes:
      - ./src:/opt/app
    depends_on:
      esearch:
        condition: service_healthy
    networks:
      sharednetwork:
        aliases:
          - etl.network

  redis:
    image: redis:${REDIS_VERSION}
    container_name: ${REDIS_HOST}
    volumes:
      - ./docker/redis_data:/data
    networks:
      sharednetwork:
        aliases:
          - redis.network

  esearch:
    container_name: ${ELASTIC_HOST}
    image: elasticsearch:${ES_VERSION}
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - ./docker/es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", 'curl -X GET "http://localhost:9200/_cluster/health?pretty"']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      sharednetwork:
        aliases:
          - esearch.network

networks:
  sharednetwork:
    external: true
    name: 1SPPoP-network

